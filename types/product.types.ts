/**
 * Product Type Definitions
 *
 * Centralized type definitions for products used across the application and tests.
 * Uses TypeScript utility types to avoid redundancy and maintain single source of truth.
 */

/**
 * Complete Product entity as stored in the application
 *
 * This represents the full product structure including metadata fields
 * that are auto-generated by the application.
 */
export interface Product {
  id: string;
  sku: string;
  name: string;
  description: string;
  price: number;
  stock: number;
  category: 'Electronics' | 'Accessories' | 'Software' | 'Hardware';
  lowStockThreshold: number;
  imageUrl?: string;
  createdAt: string;
  updatedAt: string;
}

/**
 * Product categories available in the application
 */
export type ProductCategory =
  | 'Electronics'
  | 'Accessories'
  | 'Software'
  | 'Hardware';

/**
 * Product form data for creating a new product
 *
 * Omits auto-generated fields (id, createdAt, updatedAt)
 * and makes optional fields truly optional (description, imageUrl, lowStockThreshold)
 *
 * Usage: When creating a new product via form
 */
export type ProductCreateInput = Omit<
  Product,
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'imageUrl'
  | 'description'
  | 'lowStockThreshold'
> & {
  description?: string;
  lowStockThreshold?: number;
};

/**
 * Product form data for updating an existing product
 *
 * All fields are optional except those that identify the product
 *
 * Usage: When editing a product via form (partial updates)
 */
export type ProductUpdateInput = Partial<ProductCreateInput>;

/**
 * Filter and sort options for product listing
 */
export interface ProductFilterOptions {
  searchTerm?: string;
  category?: 'all' | ProductCategory;
  sortBy?: 'name' | 'price' | 'stock';
}

/**
 * Test product data type for data-driven testing
 *
 * Allows products without auto-generated fields (id, createdAt, updatedAt).
 * Matches the structure of products in JSON test data files.
 *
 * Usage: When loading products from JSON for tests
 */
export type TestProductData = Omit<Product, 'id' | 'createdAt' | 'updatedAt'>;
